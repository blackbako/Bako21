# Bisection Method in Python
# Example equation: f(x) = x^3 - 5x + 1

def f(x):
    return x**3 - 5*x + 1  # You can change this to any function you want

def bisection(a, b, tol=1e-5, max_iter=50):
    if f(a) * f(b) >= 0:
        print("Error: f(a) and f(b) must have opposite signs.")
        return None

    print(f"{'Iter':<5} {'a':<10} {'b':<10} {'c':<10} {'f(c)':<12} {'|b-a|':<10}")
    print("-" * 60)

    for i in range(1, max_iter + 1):
        c = (a + b) / 2
        fc = f(c)

        print(f"{i:<5} {a:<10.6f} {b:<10.6f} {c:<10.6f} {fc:<12.6f} {abs(b - a):<10.6f}")

        
        if abs(fc) < tol or abs(b - a) < tol:
            print("\nApproximate root =", c)
            return c

        
        if f(a) * fc < 0:
            b = c
        else:
            a = c

    print("\nMax iterations reached.")
    return (a + b) / 2


# Example usage:
root = bisection(0, 1)
